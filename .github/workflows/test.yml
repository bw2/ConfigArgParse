name: unit tests

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  black:
    name: Run Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Black
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install black

      - name: Check Python formatting conforms to Black
        run: black -t py38 --check --diff .

  test_legacy:
    needs: [black]

    name: Docker py${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']

    steps:
      - uses: actions/checkout@master

      - name: Run tests with Docker
        run: |
          docker run -i --rm -v ${{ github.workspace }}:/app -w /app python:${{ matrix.python-version }} bash <<'END'
            python -m pip install --upgrade pip setuptools wheel tox
            python -m pip install '.[test]'
            python -munittest -v
          END

  test:
    needs: [black]

    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8','3.9','3.10','3.11','3.12','3.13','pypy3.11']
      fail-fast: false

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel tox
          python -m pip install '.[test]'

      - name: Run tests
        run: python -munittest -v
